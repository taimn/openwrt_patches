--- a/target/linux/ar71xx/patches-3.10/HOLL-002-modify-tl-wr841n-v8-macaddr-led.patch      2014-08-15 11:31:50.475702066 +0800
+++ b/target/linux/ar71xx/patches-3.10/HOLL-002-modify-tl-wr841n-v8-macaddr-led.patch      2014-08-15 17:44:04.372093392 +0800
@@ -0,0 +1,109 @@
+--- a/arch/mips/ath79/mach-tl-wr841n-v8.c.orig	2014-08-20 09:12:48.052580095 +0800
++++ a/arch/mips/ath79/mach-tl-wr841n-v8.c	2014-08-20 09:11:50.712581250 +0800
+@@ -30,12 +30,13 @@
+ #define TL_WR841NV8_GPIO_LED_LAN2	20
+ #define TL_WR841NV8_GPIO_LED_LAN3	21
+ #define TL_WR841NV8_GPIO_LED_LAN4	12
+-#define TL_WR841NV8_GPIO_LED_SYSTEM	14
+ 
+-#define TL_WR841NV8_GPIO_BTN_RESET	17
++#define TL_WR841NV8_GPIO_BTN_RESET	14
++
+ #define TL_WR841NV8_GPIO_SW_RFKILL	16	/* WPS for MR3420 v2 */
+ 
+-#define TL_MR3420V2_GPIO_LED_3G	11
++#define TL_WR841NV8_GPIO_LED_USB      11
++
+ #define TL_MR3420V2_GPIO_USB_POWER	4
+ 
+ #define TL_WR841NV8_KEYS_POLL_INTERVAL	20	/* msecs */
+@@ -71,11 +72,11 @@
+ 		.name		= "tp-link:green:qss",
+ 		.gpio		= TL_WR841NV8_GPIO_LED_QSS,
+ 		.active_low	= 1,
+-	}, {
++	},/* {
+ 		.name		= "tp-link:green:system",
+ 		.gpio		= TL_WR841NV8_GPIO_LED_SYSTEM,
+ 		.active_low	= 1,
+-	}, {
++	}, */{
+ 		.name		= "tp-link:green:wan",
+ 		.gpio		= TL_WR841NV8_GPIO_LED_WAN,
+ 		.active_low	= 1,
+@@ -84,9 +85,8 @@
+ 		.gpio		= TL_WR841NV8_GPIO_LED_WLAN,
+ 		.active_low	= 1,
+ 	}, {
+-		/* the 3G LED is only present on the MR3420 v2 */
+-		.name		= "tp-link:green:3g",
+-		.gpio		= TL_MR3420V2_GPIO_LED_3G,
++		.name		= "tp-link:green:usb",
++		.gpio		= TL_WR841NV8_GPIO_LED_USB,
+ 		.active_low	= 1,
+ 	},
+ };
+@@ -127,10 +127,18 @@
+ 	}
+ };
+ 
++#define AP121_MAC0_OFFSET		0x0000
++#define AP121_MAC1_OFFSET		0x0006
++#define AP121_CALDATA_OFFSET		0x1000
++#define AP121_WMAC_MAC_OFFSET		0x1002
++
++
+ static void __init tl_ap123_setup(void)
+ {
+-	u8 *mac = (u8 *) KSEG1ADDR(0x1f01fc00);
+-	u8 *ee = (u8 *) KSEG1ADDR(0x1fff1000);
++	u8 *art = (u8 *) KSEG1ADDR(0x1fff0000);
++	*((volatile unsigned long*)KSEG1ADDR(0x18040038)) &= 0xffffff00;
++	*((volatile unsigned long*)KSEG1ADDR(0x1804003c)) &= 0x0000ffff;
++	*((volatile unsigned long*)KSEG1ADDR(0x18040040)) &= 0xffff0000;
+ 
+ 	/* Disable JTAG, enabling GPIOs 0-3 */
+ 	/* Configure OBS4 line, for GPIO 4*/
+@@ -140,6 +148,10 @@
+ 	/* config gpio4 as normal gpio function */
+ 	ath79_gpio_output_select(TL_MR3420V2_GPIO_USB_POWER,
+ 				 AR934X_GPIO_OUT_GPIO);
++	
++        ath79_gpio_function_setup(AR934X_GPIO_FUNC_JTAG_DISABLE, AR934X_GPIO_FUNC_CLK_OBS4_EN);
++        ath79_gpio_output_select(TL_WR841NV8_GPIO_LED_USB, AR934X_GPIO_OUT_GPIO);
++
+ 
+ 	ath79_register_m25p80(&tl_wr841n_v8_flash_data);
+ 
+@@ -147,9 +159,10 @@
+ 
+ 	ath79_register_mdio(1, 0x0);
+ 
+-	ath79_init_mac(ath79_eth0_data.mac_addr, mac, -1);
+-	ath79_init_mac(ath79_eth1_data.mac_addr, mac, 0);
+-
++	ath79_init_mac(ath79_eth0_data.mac_addr, art + AP121_MAC0_OFFSET, 0);
++	ath79_init_mac(ath79_eth1_data.mac_addr, art + AP121_MAC0_OFFSET, 1);
++	
++	
+ 	/* GMAC0 is connected to the PHY0 of the internal switch */
+ 	ath79_switch_data.phy4_mii_en = 1;
+ 	ath79_switch_data.phy_poll_mask = BIT(0);
+@@ -162,15 +175,14 @@
+ 	ath79_eth1_data.phy_if_mode = PHY_INTERFACE_MODE_GMII;
+ 	ath79_register_eth(1);
+ 
+-	ath79_register_wmac(ee, mac);
++	ath79_register_wmac(art + AP121_CALDATA_OFFSET,art + AP121_WMAC_MAC_OFFSET);
+ }
+ 
+ static void __init tl_wr841n_v8_setup(void)
+ {
+ 	tl_ap123_setup();
+ 
+-	ath79_register_leds_gpio(-1, ARRAY_SIZE(tl_wr841n_v8_leds_gpio) - 1,
+-				 tl_wr841n_v8_leds_gpio);
++	ath79_register_leds_gpio(-1, ARRAY_SIZE(tl_wr841n_v8_leds_gpio), tl_wr841n_v8_leds_gpio);
+ 
+ 	ath79_register_gpio_keys_polled(1, TL_WR841NV8_KEYS_POLL_INTERVAL,
+ 					ARRAY_SIZE(tl_wr841n_v8_gpio_keys),
